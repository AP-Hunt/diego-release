$ErrorActionPreference = "Stop";
trap { $host.SetShouldExit(1) }

$service_name="rep_windows"
$log_dir="/var/vcap/sys/log/rep_windows"
$logfile="${log_dir}/post-start.log"

<%
  def convert_to_seconds(duration)
    result = duration.scan(/([\d.]+)(ns|us|ms|s|m|h)/).map do |val_string, unit|
      val = val_string.to_i
      conversion = 0

      case unit
      when "h"
	conversion = 3600
      when "m"
	conversion = 60
      when "s"
	conversion = 1
      end

      val * conversion
    end

    result.reduce(0, :+)
  end
%>

$address="https://<%=p("diego.rep.listen_addr_admin")%>"

New-Item -ItemType "directory" -Force "${log_dir}" 2>&1 | `
    Out-File -Append -Encoding utf8 -FilePath $logfile

$tls_ca_cert="<%="/var/vcap/jobs/#{p("diego.rep.job_name")}/config/certs/tls_ca.crt"%>"
$tls_cert="<%="/var/vcap/jobs/#{p("diego.rep.job_name")}/config/certs/tls.crt"%>"
$tls_key="<%="/var/vcap/jobs/#{p("diego.rep.job_name")}/config/certs/tls.key"%>"

function ping {
    try {
    <%="/var/vcap/packages/#{p("diego.rep.job_name")}/gocurl.exe"%> `
        --cacert=${tls_ca_cert} --cert=${tls_cert} --key=${tls_key} "$address/ping" 2>&1 | `
        Out-File -Append -Encoding utf8 -FilePath $logfile
    } catch {
        return $false
    }
    return $true
}

function date {
<% if p("logging.format.timestamp") == "rfc3339" %>
    return Get-Date
<% else %>
    return [Xml.XmlConvert]::ToString((get-date),[Xml.XmlDateTimeSerializationMode]::Utc)
<% end %>
}

$i = 1
$StartDate = (date)
$timeout = <%= convert_to_seconds p("diego.executor.garden_healthcheck.timeout") %>
"$(date): Pinging rep..." | Out-File -Append -Encoding utf8 -FilePath $logfile
while ( $(date) -lt $StartDate.AddSeconds($timeout) ) {
    if (ping) {
        "$(date): Success!" | Out-File -Append -Encoding utf8 -FilePath $logfile
        Exit 0
    }
    "$(date): Attempt $i failed. Trying again..." | Out-File -Append -Encoding utf8 -FilePath $logfile
    $i++
    Start-Sleep -Seconds 1
    "$(date): waiting" | Out-File -Append -Encoding utf8 -FilePath $logfile
}

"$(date): Timed out pinging rep. Failing post-start." | Out-File -Append -Encoding utf8 -FilePath $logfile
Exit 1
