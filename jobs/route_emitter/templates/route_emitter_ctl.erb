#!/bin/bash -e

RUN_DIR=/var/vcap/sys/run/route_emitter
LOG_DIR=/var/vcap/sys/log/route_emitter
CONF_DIR=/var/vcap/jobs/route_emitter/config
PIDFILE=$RUN_DIR/route_emitter.pid

source /var/vcap/packages/pid_utils/pid_utils.sh

export DROPSONDE_ORIGIN='<%= name %>/<%= spec.index %>.route_emitter'

case $1 in

  start)
    pid_guard $PIDFILE "route_emitter"

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR

    echo $$ > /var/vcap/sys/run/route_emitter/route_emitter.pid

    /var/vcap/packages/syslog_forwarder/syslog_forwarder.sh $CONF_DIR/syslog_forwarder.conf

    exec /var/vcap/packages/route_emitter/bin/route-emitter \
      -etcdCluster=<%= p("route_emitter.etcd.machines").map{|addr| "\"http://#{addr}:4001\""}.join(",")%> \
      -natsAddresses=<%= p("route_emitter.nats.machines").collect { |addr| "#{addr}:#{p("route_emitter.nats.port")}" }.join(",") %> \
      -natsUsername=<%= p("route_emitter.nats.username") %> \
      -natsPassword=<%= p("route_emitter.nats.password") %> \
      -debugAddr=<%= p("route_emitter.debug_addr") %> \
      2>> $LOG_DIR/route_emitter.stderr.log \
      1> >(tee -a $LOG_DIR/route_emitter.stdout.log | logger -t vcap.route-emitter)

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: route_emitter_ctl {start|stop}"

    ;;

esac
