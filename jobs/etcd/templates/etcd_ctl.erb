#!/bin/bash

RUN_DIR=/var/vcap/sys/run/etcd
LOG_DIR=/var/vcap/sys/log/etcd
PIDFILE=$RUN_DIR/etcd.pid
WORK_DIR=/var/vcap/store/etcd

source /var/vcap/packages/pid_utils/pid_utils.sh

<%
  def discover_external_ip
    networks = spec.networks.marshal_dump

    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end

    if !network
      _, network = networks.first
    end

    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end

    network.ip
  end

  my_ip = discover_external_ip
%>

case $1 in

  start)
    pid_guard $PIDFILE "etcd"

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR
    mkdir -p $WORK_DIR

    chown -R vcap:vcap $RUN_DIR
    chown -R vcap:vcap $LOG_DIR
    chown -R vcap:vcap $WORK_DIR

    echo $$ > $PIDFILE

    ulimit -n 65536

    exec chpst -u vcap:vcap /var/vcap/packages/etcd/etcd \
        --name=<%= my_ip %> \
        --data-dir=$WORK_DIR \
        --heartbeat-interval=<%= p("diego.etcd.heartbeat_interval_in_milliseconds") %>\
        --election-timeout=<%= p("diego.etcd.election_timeout_in_milliseconds") %>\
        --listen-peer-urls=http://0.0.0.0:7001 \
        --listen-client-urls=http://0.0.0.0:4001 \
        --initial-advertise-peer-urls=http://<%= my_ip %>:7001 \
        --initial-cluster '<%= p("diego.etcd.machines").reverse.map { |m| "#{m}=http://#{m}:7001" }.join(",") %>' \
        --advertise-client-urls=http://<%= my_ip %>:4001 \
        2> >(tee -a $LOG_DIR/etcd.stderr.log | logger -t vcap.etcd) \
        1> >(tee -a $LOG_DIR/etcd.stdout.log | logger -t vcap.etcd)
    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: etcd_ctl {start|stop}"

    ;;

esac
