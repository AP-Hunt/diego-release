#!/bin/bash

set -u -x

LOG_DIR=/var/vcap/sys/log/etcd
LOGFILE=$LOG_DIR/drain.log
STORE_DIR=/var/vcap/store
DATA_DIR=${STORE_DIR}/etcd

exec 3>&1

exec 1>> $LOGFILE
exec 2>> $LOGFILE

<%
  def discover_external_ip
    networks = spec.networks.marshal_dump

    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end

    if !network
      _, network = networks.first
    end

    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end

    network.ip
  end

  my_ip = discover_external_ip
  peers=p("diego.etcd.machines").map { |m| "http://#{m}:4001" }.join(",")
%>

member_list() {
  /var/vcap/packages/etcd/etcdctl -C '<%= peers %>' member list || echo ""
}

member_remove() {
  /var/vcap/packages/etcd/etcdctl -C '<%= peers %>' member remove $1
}

prior_cluster_had_other_nodes() {
  [ "$( wc -l <<< '$1' )" -ne 1 ] || ! grep <%= my_ip %> <<< "$1"
}

extract_my_id() {
  echo $1 | grep <%= my_ip %> | sed 's/:.*//'
}

prior_member_list=$(member_list)

if prior_cluster_had_other_nodes "$prior_member_list"; then
  my_id=$(extract_my_id "$prior_member_list")
  if [ ! -z "$my_id" ]; then
    member_remove $my_id
  fi
  rm -rf ${DATA_DIR}/*
fi

echo 0 >&3
exit 0
