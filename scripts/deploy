#!/bin/bash

set -e -x

git submodule update --init --recursive

bosh -n target $BOSH_TARGET

if ! bosh -n login $BOSH_USER $BOSH_PASSWORD; then
  echo "Creating director user"
  bosh -n -u admin -p admin create user $BOSH_USER $BOSH_PASSWORD
fi

if [ ! -d /tmp/cache/cf-release ]; then
  git clone https://github.com/cloudfoundry/cf-release.git /tmp/cache/cf-release
fi

git clone $DEPLOYMENTS_REPO /tmp/deployments

latest_trusty_stemcell_url=https://s3.amazonaws.com/bosh-jenkins-artifacts/bosh-stemcell/aws/light-bosh-stemcell-latest-aws-xen-ubuntu-trusty-go_agent.tgz
wget -O /tmp/latest_trusty_stemcell $latest_trusty_stemcell_url
bosh upload stemcell /tmp/latest_trusty_stemcell --skip-if-exists

latest_lucid_stemcell_url=https://s3.amazonaws.com/bosh-jenkins-artifacts/bosh-stemcell/aws/light-bosh-stemcell-latest-aws-xen-ubuntu-lucid-go_agent.tgz
wget -O /tmp/latest_lucid_stemcell $latest_lucid_stemcell_url
bosh upload stemcell /tmp/latest_lucid_stemcell --skip-if-exists

rm /tmp/latest_*_stemcell

pushd /tmp/cache/cf-release
  git checkout acceptance-deployed

  git pull --ff-only origin develop
  git submodule foreach --recursive git submodule sync
  git submodule update --init --recursive

  git reset --hard
  git clean --force --force -d
  git submodule foreach --recursive git clean --force --force -d

  # work around uaa prepackaging :(
  rm src/uaa/.git
  ln -s $PWD/.git/modules/src/uaa src/uaa/.git

  echo cf | bosh create release
  bosh -n upload release --rebase --skip-if-exists || true

  ./generate_deployment_manifest aws \
    /tmp/deployments/${DEPLOYMENT_NAME}/stubs/* > /tmp/cf-deployment.yml

  bosh deployment /tmp/cf-deployment.yml

  yes yes | bosh deploy
popd

echo diego | bosh create release
bosh -n upload release --rebase --skip-if-exists || true

./generate_deployment_manifest aws /tmp/cache/cf-release \
  /tmp/deployments/${DEPLOYMENT_NAME}/stubs/* > /tmp/diego-deployment.yml

bosh deployment /tmp/diego-deployment.yml

yes yes | bosh deploy
